service: flowers-api

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '2'

provider:
  name: aws
  runtime: java11
  lambdaHashingVersion: 20201221

# you can overwrite defaults here
#  stage: dev
#  region: us-east-1

# you can add statements to the Lambda function's IAM Role here
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:*"
      Resource: "*"   
  
  environment:
    FLOWERS_TABLE_NAME: "flowers_table"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
package:
  artifact: target/flowers-api-dev.jar

functions:
  getAllFlowers:
    handler: com.serverless.handler.ListFlowersHandler
    events:
      - http:
          path: /
          method: get  
  # getFlower:
  #   handler: com.serverless.handler.GetFlowerHandler
  #   events:
  #     - http:
  #         path: /flowers/{id}
  #         method: get
  # createFlower:
  #   handler: com.serverless.handler.CreateFlowerHandler
  #   events:
  #     - http:
  #         path: /flowers
  #         method: post
  # deleteFlower:
  #   handler: com.serverless.handler.DeleteFlowerHandler
  #   events:
  #     - http:
  #         path: /flowers/{id}
  #         method: delete

# you can add CloudFormation resource templates here
resources:
 Resources:
   FlowersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: flowers_table
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: name
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
          - AttributeName: name
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
